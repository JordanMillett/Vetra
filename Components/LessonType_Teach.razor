@inject LessonService Lessons
@inject ProfileService Profile

@if (Logic == null)
    return;
@if (Logic.Included.Count == 0)
    return;

<div class="row py-4">
    <div class="col-12 text-center">
        @{
            VocabHeader Term = Logic.Included[0];

            <h1>@Term.RU</h1>
            <h5>(@Term.EN)</h5>

            if(Term.Category == "Noun")
            {
                <p>@Logic.Included[0].Category - @Logic.Included[0].Gender</p>
            }
        }
       
        <br>
        <button class="btn" @onclick="() => Done()">Done</button>
        </div>
</div>

@code
{
    [Parameter, EditorRequired]
    public LessonLogic Logic { get; set; } = default!;

    [Parameter]
    public EventCallback<LessonLogic> LogicChanged { get; set; }

    [Parameter, EditorRequired]
    public Action? OnFinish { get; set; }

    void Done()
    {
        Logic.Results.Add(Logic.Included[0].RU, true);
        LogicChanged.InvokeAsync(Logic);

        OnFinish?.Invoke();
    }
}