@inherits LayoutComponentBase
@inject SettingsService Settings

<div class="bb-page">

    <Sidebar @ref="sidebar" Title="Vetra" DataProvider="SidebarDataProvider" />

    <main>
        <article class="content px-4">
            <div class="py-2">@Body</div>
        </article>
    </main>

</div>

@code {

    Sidebar sidebar = default!;
    List<NavItem> navItems = default!;

    protected override void OnInitialized()
    {
        Settings.RefreshNavigation += RefreshNavigation;
    }

    private void RefreshNavigation(object? sender, EventArgs e)
    {
        navItems = GetNavItems();
        sidebar.RefreshDataAsync();
    }

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private List<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "", IconName = IconName.Journals, Text = "Learn", Match=NavLinkMatch.All},
            new NavItem { Id = "2", Href = "progress/", IconName = IconName.BarChart, Text = "Progress"},
            new NavItem { Id = "3", Href = "profile/", IconName = IconName.Person, Text = "Profile"},
            new NavItem { Id = "4", Href = "settings/", IconName = IconName.Gear, Text = "Settings"},
        };

        if (Settings.Data.DevToolsEnabled)
            navItems.Add(new NavItem { Id = "5", Href = "developer/", IconName = IconName.Bug, Text = "Developer" });

        return navItems;
    }
}